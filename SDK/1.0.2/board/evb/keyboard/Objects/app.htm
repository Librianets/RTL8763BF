<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Mar 23 10:49:14 2019
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
app_main_task &rArr; app_handle_io_msg &rArr; app_handle_gap_msg &rArr; app_handle_dev_state_evt &rArr; privacy_init &rArr; privacy_add_device &rArr; privacy_modify_resolving_list
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[f]">BTMAC_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[96]">DLPS_IO_EnterDlpsCb</a> from rtl876x_io_dlps.o(.text) referenced from rtl876x_io_dlps.o(.text)
 <LI><a href="#[3a]">DLPS_IO_ExitDlpsCb</a> from rtl876x_io_dlps.o(.ram.dataon.data) referenced from rtl876x_io_dlps.o(.text)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[46]">Default_Handler</a> from startup_rtl8762c.o(.text) referenced from system_rtl8762c.o(.app.overlay_a)
 <LI><a href="#[20]">GDMA0_Channel0_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[21]">GDMA0_Channel1_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[22]">GDMA0_Channel2_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[23]">GDMA0_Channel3_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[24]">GDMA0_Channel4_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[25]">GDMA0_Channel5_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[15]">GPIO4_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[16]">GPIO5_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[2a]">GPIO_Group0_Handler</a> from system_rtl8762c.o(.ram.dataon.data) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[29]">GPIO_Group1_Handler</a> from system_rtl8762c.o(.ram.dataon.data) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[27]">GPIO_Group2_Handler</a> from system_rtl8762c.o(.ram.dataon.data) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[26]">GPIO_Group3_Handler</a> from system_rtl8762c.o(.ram.dataon.data) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_rtl8762c.o(.text) referenced 2 times from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1c]">I2C0_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1d]">I2C1_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[13]">I2S0_RX_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[12]">I2S0_TX_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[37]">I2S1_RX_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[36]">I2S1_TX_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[28]">IR_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[32]">Keyscan_Handler</a> from keyscan.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[38]">LCD_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[34]">LPCOMP_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[4]">NMI_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[35]">PTA_Mailbox_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1f]">Peripheral_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[31]">Qdecode_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[19]">RTC_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[3]">Reset_Handler</a> from startup_rtl8762c.o(RESET) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a]">SPI0_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b]">SPI1_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[33]">SPI2W_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[30]">SPI_Flash_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[9]">SVC_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1]">SystemInit</a> from system_rtl8762c.o(.app.flash.text) referenced from startup_rtl8762c.o(RESET)
 <LI><a href="#[d]">System_Handler</a> from main.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[11]">Timer2_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[10]">Timer3_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[14]">Timer4_7_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[2c]">Timer4_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[2d]">Timer5_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[2e]">Timer6_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[2f]">Timer7_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[18]">UART0_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[17]">UART1_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[2b]">UART2_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[e]">WDG_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[110]">adv_led_timeout</a> from keyboard_led.o(.text) referenced from keyboard_led.o(.text)
 <LI><a href="#[3d]">app_cb0_wdg_reset</a> from system_rtl8762c.o(.text) referenced from system_rtl8762c.o(.constdata)
 <LI><a href="#[3b]">app_gap_callback</a> from keyboard_app.o(.text) referenced from main.o(.text)
 <LI><a href="#[c7]">app_main_task</a> from app_task.o(.text) referenced from app_task.o(.text)
 <LI><a href="#[3c]">app_profile_callback</a> from keyboard_app.o(.text) referenced from main.o(.text)
 <LI><a href="#[41]">bas_attr_read_cb</a> from bas.o(.text) referenced from bas.o(.constdata)
 <LI><a href="#[42]">bas_cccd_update_cb</a> from bas.o(.text) referenced from bas.o(.constdata)
 <LI><a href="#[2]">common_main</a> from system_rtl8762c.o(.text) referenced from system_rtl8762c.o(.app.flash.text)
 <LI><a href="#[43]">dis_attr_read_cb</a> from dis.o(.text) referenced from dis.o(.constdata)
 <LI><a href="#[11f]">gap_lib_handle_btif_msg</a> from gap_lib.o(.text) referenced from gap_lib.o(.text)
 <LI><a href="#[3e]">hids_attr_read_cb</a> from hids_kb.o(.text) referenced from hids_kb.o(.constdata)
 <LI><a href="#[3f]">hids_attr_write_cb</a> from hids_kb.o(.text) referenced from hids_kb.o(.constdata)
 <LI><a href="#[40]">hids_cccd_update_cb</a> from hids_kb.o(.text) referenced from hids_kb.o(.constdata)
 <LI><a href="#[b5]">keyboard_enter_dlps</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[bf]">keyboard_enter_dlps_check</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[b8]">keyboard_exit_dlps</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[112]">keyboard_update_con_para</a> from profile_init.o(.text) referenced from profile_init.o(.text)
 <LI><a href="#[100]">keyscan_timer_callback</a> from keyscan.o(.text) referenced from keyscan.o(.text)
 <LI><a href="#[39]">log_direct</a> from ROM.lib(ABSOLUTE) referenced from startup_rtl8762c.o(.text)
 <LI><a href="#[109]">longpress_timeout</a> from keyboard_button.o(.text) referenced from keyboard_button.o(.text)
 <LI><a href="#[44]">ota_attr_read_cb</a> from ota_service.o(.text) referenced from ota_service.o(.constdata)
 <LI><a href="#[45]">ota_attr_write_cb</a> from ota_service.o(.text) referenced from ota_service.o(.constdata)
 <LI><a href="#[11c]">privacy_msg_callback</a> from privacy_mgnt.o(.text) referenced from privacy_mgnt.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[56]"></a>RamVectorTableInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
</UL>

<P><STRONG><a name="[84]"></a>SystemCall</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_SystemReset
</UL>

<P><STRONG><a name="[39]"></a>log_direct</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>log_buffer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_add_service
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_attr_read_cb
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_set_parameter
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_add_service
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_cccd_update_cb
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_attr_read_cb
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_set_parameter
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_add_service
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_send_report
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_cccd_update_cb
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_update_con_para
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_timeout
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timeout
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_timer_callback
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_handle_bond_modify_msg
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_add_device
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_press_event
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_pair_event
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_mtu_info_evt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_authen_state_evt
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_msg_to_apptask
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_timer
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_data
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgr_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_add_service
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_attr_read_cb
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_attr_write_cb
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_sec_level
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_check_privacy_bond
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_msg_callback
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_handle_le_privacy_resolution_status_info
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_handle_le_privacy_modify_resolv_list_rsp
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_modify_resolving_list
</UL>

<P><STRONG><a name="[115]"></a>trace_bdaddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_modify_resolving_list
</UL>

<P><STRONG><a name="[51]"></a>trace_string</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
</UL>

<P><STRONG><a name="[c1]"></a>dlps_check_cb_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgr_init
</UL>

<P><STRONG><a name="[98]"></a>dlps_hw_control_cb_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IORegister
</UL>

<P><STRONG><a name="[c2]"></a>lps_mode_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgr_init
</UL>

<P><STRONG><a name="[86]"></a>flash_ioctl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_try_high_speed
</UL>

<P><STRONG><a name="[94]"></a>get_header_addr_by_img_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_attr_read_cb
</UL>

<P><STRONG><a name="[80]"></a>NVIC_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_nvic_config
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_button_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
</UL>

<P><STRONG><a name="[f0]"></a>Pinmux_Config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_pinmux_config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_pinmux_config
</UL>

<P><STRONG><a name="[7e]"></a>Pad_Config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_timeout
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_adv_led_timer
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_adv_led_timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_adv_count
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capslock_led_on
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capslock_led_off
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_pad_config
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_enter_dlps_config
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_led_init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_pad_config
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_exit_dlps_config
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_enter_dlps_config
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_EnterDlpsCb
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
</UL>

<P><STRONG><a name="[f2]"></a>System_WakeUpDebounceTime</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_enable_wakeup_config
</UL>

<P><STRONG><a name="[f3]"></a>System_WakeUpPinEnable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_enable_wakeup_config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_pad_config
</UL>

<P><STRONG><a name="[f5]"></a>System_WakeUpPinDisable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_disable_wakeup_config
</UL>

<P><STRONG><a name="[81]"></a>WDG_Disable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
</UL>

<P><STRONG><a name="[129]"></a>btif_vendor_cmd_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_modify_bt_le_fw_policy
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_lps_bootup_active_time
</UL>

<P><STRONG><a name="[124]"></a>btif_just_work_req_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_just_work_confirm
</UL>

<P><STRONG><a name="[c8]"></a>os_msg_queue_create_intern</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[cf]"></a>os_msg_send_intern</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_msg_to_apptask
</UL>

<P><STRONG><a name="[ca]"></a>os_msg_recv_intern</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[82]"></a>os_sched_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
</UL>

<P><STRONG><a name="[cd]"></a>os_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
</UL>

<P><STRONG><a name="[101]"></a>os_timer_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timer_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_timer
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_param_updata_timer_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_timer_init
</UL>

<P><STRONG><a name="[10d]"></a>os_timer_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_longpress_timer
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_con_update_timer
</UL>

<P><STRONG><a name="[fd]"></a>os_timer_restart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_timeout
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_timer_callback
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_adv_led_timer
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
</UL>

<P><STRONG><a name="[ff]"></a>os_timer_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_longpress_timer
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_con_update_timer
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_adv_led_timer
</UL>

<P><STRONG><a name="[bb]"></a>btaon_fast_read_safe</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
</UL>

<P><STRONG><a name="[bc]"></a>btaon_fast_write_safe</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
</UL>

<P><STRONG><a name="[d9]"></a>dfu_switch_to_ota_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
</UL>

<P><STRONG><a name="[121]"></a>gap_register_extend_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init
</UL>

<P><STRONG><a name="[c9]"></a>gap_start_bt_stack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[cb]"></a>gap_handle_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[a0]"></a>gap_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[93]"></a>gap_get_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_attr_read_cb
</UL>

<P><STRONG><a name="[e0]"></a>le_bond_clear_all_keys</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timeout
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
</UL>

<P><STRONG><a name="[a1]"></a>le_bond_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[104]"></a>le_bond_passkey_input_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_pair_event
</UL>

<P><STRONG><a name="[e6]"></a>le_bond_oob_input_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[e3]"></a>le_bond_get_display_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[e5]"></a>le_bond_user_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[e4]"></a>le_bond_passkey_display_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[c5]"></a>le_gap_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>le_register_app_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[9e]"></a>le_set_gap_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[117]"></a>le_modify_white_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_modify_resolving_list
</UL>

<P><STRONG><a name="[d4]"></a>le_get_conn_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_update_con_para
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
</UL>

<P><STRONG><a name="[126]"></a>le_get_conn_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_sec_level
</UL>

<P><STRONG><a name="[ec]"></a>le_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timeout
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_callback
</UL>

<P><STRONG><a name="[113]"></a>le_update_conn_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_update_con_para
</UL>

<P><STRONG><a name="[a4]"></a>server_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[a5]"></a>server_register_app_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[8b]"></a>server_add_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_add_service
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_add_service
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_add_service
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_add_service
</UL>

<P><STRONG><a name="[8f]"></a>server_attr_read_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_battery_level_value_read_confirm
</UL>

<P><STRONG><a name="[89]"></a>server_send_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_battery_level_value_notify
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_send_report
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_release_event
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_press_event
</UL>

<P><STRONG><a name="[127]"></a>le_find_key_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_sec_level
</UL>

<P><STRONG><a name="[d1]"></a>le_get_high_priority_bond</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_start_adv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_authen_state_evt
</UL>

<P><STRONG><a name="[123]"></a>le_get_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_sec_level
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_check_privacy_bond
</UL>

<P><STRONG><a name="[119]"></a>le_get_privacy_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_add_device
</UL>

<P><STRONG><a name="[9d]"></a>gaps_set_peripheral_preferred_conn_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[11d]"></a>le_privacy_register_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_init
</UL>

<P><STRONG><a name="[df]"></a>le_privacy_set_addr_resolution</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timeout
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_start_adv
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
</UL>

<P><STRONG><a name="[116]"></a>le_privacy_modify_resolv_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_modify_resolving_list
</UL>

<P><STRONG><a name="[118]"></a>le_privacy_set_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_modify_resolving_list
</UL>

<P><STRONG><a name="[9f]"></a>le_adv_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_start_adv
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[111]"></a>le_adv_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_start_adv
</UL>

<P><STRONG><a name="[10a]"></a>le_adv_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_timeout
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timeout
</UL>

<P><STRONG><a name="[50]"></a>setlocale</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[fe]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_overlay
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_check_privacy_bond
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_scenario_index
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_set_parameter
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_set_parameter
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_overlay
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ram_init
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_overlay
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ram_init
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_data
</UL>

<P><STRONG><a name="[5f]"></a>exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[57]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[12b]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[12c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[12d]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[12e]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[12f]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[130]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[131]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[132]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[133]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[134]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[135]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[136]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[137]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[138]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[139]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[13a]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[13b]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[13c]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[13d]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[13e]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[49]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[13f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[59]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5b]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[140]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5d]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; app_le_gap_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[141]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[26]"></a>GPIO_Group3_Handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, system_rtl8762c.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_Group3_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO7_Handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_Handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO31_Handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO27_Handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO23_Handler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO19_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO15_Handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[27]"></a>GPIO_Group2_Handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, system_rtl8762c.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_Group2_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO6_Handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO30_Handler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_Handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO26_Handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO22_Handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO18_Handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO14_Handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[29]"></a>GPIO_Group1_Handler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, system_rtl8762c.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_Group1_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO9_Handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO29_Handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO25_Handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO21_Handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Handler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO17_Handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[2a]"></a>GPIO_Group0_Handler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, system_rtl8762c.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_Group0_Handler &rArr; GPIO20_Handler &rArr; app_send_msg_to_apptask
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO8_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO28_Handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO24_Handler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO16_Handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO12_Handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Handler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[3a]"></a>DLPS_IO_ExitDlpsCb</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DLPS_IO_ExitDlpsCb &rArr; GPIO_DLPS_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_enable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DLPS_Exit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtl876x_io_dlps.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[f]"></a>BTMAC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[46]"></a>Default_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> system_rtl8762c.o(.app.overlay_a)
</UL>
<P><STRONG><a name="[20]"></a>GDMA0_Channel0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[21]"></a>GDMA0_Channel1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[22]"></a>GDMA0_Channel2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[23]"></a>GDMA0_Channel3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[24]"></a>GDMA0_Channel4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[25]"></a>GDMA0_Channel5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[77]"></a>GPIO0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[6a]"></a>GPIO10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[62]"></a>GPIO11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[79]"></a>GPIO12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[72]"></a>GPIO13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[6b]"></a>GPIO14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[63]"></a>GPIO15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[7a]"></a>GPIO16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[73]"></a>GPIO17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[6c]"></a>GPIO18_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[64]"></a>GPIO19_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[70]"></a>GPIO1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[74]"></a>GPIO21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[6d]"></a>GPIO22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[65]"></a>GPIO23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[7c]"></a>GPIO24_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[75]"></a>GPIO25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[6e]"></a>GPIO26_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[66]"></a>GPIO27_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[7d]"></a>GPIO28_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[76]"></a>GPIO29_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[68]"></a>GPIO2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[6f]"></a>GPIO30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[67]"></a>GPIO31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[60]"></a>GPIO3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[15]"></a>GPIO4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[16]"></a>GPIO5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[69]"></a>GPIO6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[61]"></a>GPIO7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[78]"></a>GPIO8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[71]"></a>GPIO9_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1c]"></a>I2C0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[13]"></a>I2S0_RX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[12]"></a>I2S0_TX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[37]"></a>I2S1_RX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[36]"></a>I2S1_TX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[28]"></a>IR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[38]"></a>LCD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[34]"></a>LPCOMP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[35]"></a>PTA_Mailbox_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1f]"></a>Peripheral_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[31]"></a>Qdecode_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[19]"></a>RTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1a]"></a>SPI0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b]"></a>SPI1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[33]"></a>SPI2W_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[30]"></a>SPI_Flash_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[11]"></a>Timer2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[10]"></a>Timer3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[14]"></a>Timer4_7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[2c]"></a>Timer4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[2d]"></a>Timer5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[2e]"></a>Timer6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[2f]"></a>Timer7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[18]"></a>UART0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[17]"></a>UART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[2b]"></a>UART2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[e]"></a>WDG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[5a]"></a>__user_setup_stackheap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2]"></a>common_main</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, system_rtl8762c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = common_main &rArr; main &rArr; app_le_gap_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sched_start
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Disable
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_direct
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_rtl8762c.o(.app.flash.text)
</UL>
<P><STRONG><a name="[83]"></a>WDG_SystemReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_rtl8762c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCall
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
</UL>

<P><STRONG><a name="[85]"></a>flash_try_high_speed</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, system_rtl8762c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ioctl
</UL>

<P><STRONG><a name="[3d]"></a>app_cb0_wdg_reset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> system_rtl8762c.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>hids_set_parameter</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, hids_kb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hids_set_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_attr_write_cb
</UL>

<P><STRONG><a name="[40]"></a>hids_cccd_update_cb</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, hids_kb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hids_cccd_update_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hids_kb.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>hids_send_report</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, hids_kb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[8a]"></a>hids_add_service</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, hids_kb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hids_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[8c]"></a>bas_set_parameter</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bas_set_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
</UL>

<P><STRONG><a name="[8d]"></a>bas_battery_level_value_notify</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, bas.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
</UL>

<P><STRONG><a name="[8e]"></a>bas_battery_level_value_read_confirm</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bas.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_attr_read_confirm
</UL>

<P><STRONG><a name="[41]"></a>bas_attr_read_cb</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bas_attr_read_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bas.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>bas_cccd_update_cb</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bas_cccd_update_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bas.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>bas_add_service</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bas_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[91]"></a>dis_set_parameter</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, dis.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[43]"></a>dis_attr_read_cb</STRONG> (Thumb, 354 bytes, Stack size 40 bytes, dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dis_attr_read_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dis.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>dis_add_service</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dis_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[45]"></a>ota_attr_write_cb</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, ota_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ota_attr_write_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_service.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>ota_attr_read_cb</STRONG> (Thumb, 428 bytes, Stack size 48 bytes, ota_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ota_attr_read_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_header_addr_by_img_id
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_service.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>ota_add_service</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ota_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ota_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[96]"></a>DLPS_IO_EnterDlpsCb</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, rtl876x_io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DLPS_IO_EnterDlpsCb
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtl876x_io_dlps.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>DLPS_IORegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rtl876x_io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DLPS_IORegister
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_hw_control_cb_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgr_init
</UL>

<P><STRONG><a name="[9a]"></a>RCC_PeriphClockCmd</STRONG> (Thumb, 292 bytes, Stack size 20 bytes, rtl876x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_button_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan_DeInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[142]"></a>RCC_SPIClkDivConfig</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>RCC_I2CClkDivConfig</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>RCC_UARTClkDivConfig</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>RCC_PeriClockConfig</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>RCC_PeriFunctionConfig</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>GPIO_DeInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>

<P><STRONG><a name="[106]"></a>GPIO_Init</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_button_init
</UL>

<P><STRONG><a name="[105]"></a>GPIO_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_button_init
</UL>

<P><STRONG><a name="[107]"></a>GPIO_INTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_button_init
</UL>

<P><STRONG><a name="[10e]"></a>GPIO_ClearINTPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
</UL>

<P><STRONG><a name="[108]"></a>GPIO_MaskINTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_button_init
</UL>

<P><STRONG><a name="[102]"></a>GPIO_GetPin</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_button_init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_pair_button_wakeup
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
</UL>

<P><STRONG><a name="[147]"></a>GPIO_GetNum</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>GPIO_DBClkCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>KeyScan_Init</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, rtl876x_keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = KeyScan_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
</UL>

<P><STRONG><a name="[9b]"></a>KeyScan_DeInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rtl876x_keyscan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>

<P><STRONG><a name="[f6]"></a>KeyScan_StructInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, rtl876x_keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyScan_StructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
</UL>

<P><STRONG><a name="[f8]"></a>KeyScan_INTConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_keyscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
</UL>

<P><STRONG><a name="[f9]"></a>KeyScan_INTMask</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_keyscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
</UL>

<P><STRONG><a name="[fc]"></a>KeyScan_Read</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtl876x_keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyScan_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
</UL>

<P><STRONG><a name="[fa]"></a>KeyScan_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtl876x_keyscan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
</UL>

<P><STRONG><a name="[149]"></a>KeyScan_FilterDataConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rtl876x_keyscan.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>app_le_gap_init</STRONG> (Thumb, 370 bytes, Stack size 120 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_le_gap_init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_set_param
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_set_peripheral_preferred_conn_param
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_gap_param
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_register_app_cb
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_set_param
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>app_le_profile_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_le_profile_init &rArr; dis_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_add_service
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_add_service
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_add_service
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_register_app_cb
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>board_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = board_init &rArr; keyscan_pad_config
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_pinmux_config
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_pad_config
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_data
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_pinmux_config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_pad_config
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>driver_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = driver_init &rArr; keyscan_init_driver &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timer_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_nvic_config
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_timer
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_led_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_button_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_param_updata_timer_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[b5]"></a>keyboard_enter_dlps</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = keyboard_enter_dlps &rArr; keyscan_enter_dlps_config &rArr; keyscan_disable_wakeup_config
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_enter_dlps_config
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_enter_dlps_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>keyboard_exit_dlps</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = keyboard_exit_dlps &rArr; keyscan_exit_dlps_config &rArr; keyscan_init_driver &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_exit_dlps_config
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_button_exit_dlps_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>keyboard_enter_dlps_check</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>System_Handler</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = System_Handler &rArr; handle_keyscan_wakeup &rArr; keyscan_init_driver &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_pair_button_wakeup
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[c0]"></a>pwr_mgr_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwr_mgr_init &rArr; DLPS_IORegister
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps_mode_set
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_check_cb_reg
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IORegister
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c3]"></a>task_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
</UL>

<P><STRONG><a name="[5e]"></a>main</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = main &rArr; app_le_gap_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gap_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sched_start
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgr_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c7]"></a>app_main_task</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = app_main_task &rArr; app_handle_io_msg &rArr; app_handle_gap_msg &rArr; app_handle_dev_state_evt &rArr; privacy_init &rArr; privacy_add_device &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_handle_msg
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_bt_stack
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_recv_intern
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_queue_create_intern
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>app_task_init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_task_init
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
</UL>

<P><STRONG><a name="[ce]"></a>app_send_msg_to_apptask</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_send_msg_to_apptask
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_send_intern
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_timer_callback
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
</UL>

<P><STRONG><a name="[d0]"></a>app_handle_authen_state_evt</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_handle_authen_state_evt &rArr; privacy_add_device &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_high_priority_bond
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_add_device
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[d3]"></a>app_handle_conn_param_update_evt</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_handle_conn_param_update_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_con_update_timer
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_con_update_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[d7]"></a>app_handle_conn_mtu_info_evt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_handle_conn_mtu_info_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[d8]"></a>app_handle_conn_state_evt</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_handle_conn_state_evt &rArr; keyboard_start_adv
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_SystemReset
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_switch_to_ota_mode
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_con_update_timer
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_adv_led_timer
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_con_update_timer
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_adv_led_timer
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_start_adv
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[dd]"></a>app_handle_dev_state_evt</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_handle_dev_state_evt &rArr; privacy_init &rArr; privacy_add_device &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_privacy_set_addr_resolution
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_clear_all_keys
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[e1]"></a>app_handle_gap_msg</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_handle_gap_msg &rArr; app_handle_dev_state_evt &rArr; privacy_init &rArr; privacy_add_device &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_passkey_display_confirm
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_user_confirm
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_display_key
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_oob_input_confirm
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_set_param
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_just_work_confirm
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_mtu_info_evt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_authen_state_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
</UL>

<P><STRONG><a name="[cc]"></a>app_handle_io_msg</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_handle_io_msg &rArr; app_handle_gap_msg &rArr; app_handle_dev_state_evt &rArr; privacy_init &rArr; privacy_add_device &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_adv_led_timer
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_start_adv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_release_event
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_press_event
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_pair_event
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_pair_button_event
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[3b]"></a>app_gap_callback</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_gap_callback &rArr; privacy_handle_bond_modify_msg &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_disconnect
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_adv_led_timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_adv_count
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_handle_bond_modify_msg
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_start_adv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>app_profile_callback</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, keyboard_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_profile_callback &rArr; capslock_led_on
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_set_parameter
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_disconnect
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capslock_led_on
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capslock_led_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>keyscan_pad_config</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = keyscan_pad_config
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_exit_dlps_config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[a8]"></a>keyscan_pinmux_config</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = keyscan_pinmux_config
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[f1]"></a>keyscan_enable_wakeup_config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = keyscan_enable_wakeup_config
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WakeUpPinEnable
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WakeUpDebounceTime
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_enter_dlps_config
</UL>

<P><STRONG><a name="[f4]"></a>keyscan_disable_wakeup_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = keyscan_disable_wakeup_config
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WakeUpPinDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_enter_dlps_config
</UL>

<P><STRONG><a name="[b6]"></a>keyscan_enter_dlps_config</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = keyscan_enter_dlps_config &rArr; keyscan_disable_wakeup_config
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_disable_wakeup_config
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_enable_wakeup_config
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_enter_dlps
</UL>

<P><STRONG><a name="[ad]"></a>keyscan_init_driver</STRONG> (Thumb, 142 bytes, Stack size 72 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = keyscan_init_driver &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan_Cmd
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan_INTMask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan_INTConfig
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan_StructInit
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_timer_callback
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_exit_dlps_config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_keyscan_wakeup
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[b9]"></a>keyscan_exit_dlps_config</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = keyscan_exit_dlps_config &rArr; keyscan_init_driver &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_pad_config
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_exit_dlps
</UL>

<P><STRONG><a name="[ae]"></a>keyscan_nvic_config</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = keyscan_nvic_config
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[a7]"></a>keyscan_init_data</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = keyscan_init_data
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_timer_callback
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keyscan_Handler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[32]"></a>Keyscan_Handler</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Keyscan_Handler &rArr; keyscan_init_driver &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_restart
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_msg_to_apptask
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_data
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan_Read
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan_INTMask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[100]"></a>keyscan_timer_callback</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = keyscan_timer_callback &rArr; keyscan_init_driver &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_restart
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_msg_to_apptask
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keyscan.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>keyscan_init_timer</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = keyscan_init_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_create
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[be]"></a>handle_keyscan_wakeup</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = handle_keyscan_wakeup &rArr; keyscan_init_driver &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_restart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_pinmux_config
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_pad_config
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_init_driver
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
</UL>

<P><STRONG><a name="[103]"></a>set_passkey</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, key_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_handle_pair_event
</UL>

<P><STRONG><a name="[e9]"></a>keyboard_handle_pair_event</STRONG> (Thumb, 406 bytes, Stack size 48 bytes, key_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = keyboard_handle_pair_event
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_passkey_input_confirm
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_passkey
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
</UL>

<P><STRONG><a name="[ea]"></a>keyboard_handle_press_event</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, key_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = keyboard_handle_press_event
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
</UL>

<P><STRONG><a name="[e8]"></a>keyboard_handle_release_event</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, key_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keyboard_handle_release_event
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
</UL>

<P><STRONG><a name="[a9]"></a>gpio_button_pinmux_config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyboard_button.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[ab]"></a>gpio_button_pad_config</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, keyboard_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_button_pad_config
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WakeUpPinEnable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[b7]"></a>gpio_button_enter_dlps_config</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, keyboard_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_button_enter_dlps_config
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_enter_dlps
</UL>

<P><STRONG><a name="[ba]"></a>gpio_button_exit_dlps_config</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, keyboard_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_button_exit_dlps_config
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_exit_dlps
</UL>

<P><STRONG><a name="[b0]"></a>keyboard_button_init</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, keyboard_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = keyboard_button_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_MaskINTConfig
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INTConfig
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[109]"></a>longpress_timeout</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, keyboard_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = longpress_timeout &rArr; keyboard_start_adv
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_stop
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_privacy_set_addr_resolution
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_disconnect
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_clear_all_keys
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_adv_led_timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_adv_count
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_start_adv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keyboard_button.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>longpress_timer_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, keyboard_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = longpress_timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[10b]"></a>stop_longpress_timer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, keyboard_button.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_pair_button_event
</UL>

<P><STRONG><a name="[10c]"></a>start_longpress_timer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, keyboard_button.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_pair_button_event
</UL>

<P><STRONG><a name="[7b]"></a>GPIO20_Handler</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, keyboard_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO20_Handler &rArr; app_send_msg_to_apptask
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WakeUpPinEnable
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_msg_to_apptask
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_MaskINTConfig
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearINTPendingBit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INTConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_pair_button_wakeup
</UL>

<P><STRONG><a name="[e7]"></a>handle_pair_button_event</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, keyboard_button.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_longpress_timer
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_longpress_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
</UL>

<P><STRONG><a name="[bd]"></a>handle_pair_button_wakeup</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, keyboard_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = handle_pair_button_wakeup &rArr; GPIO20_Handler &rArr; app_send_msg_to_apptask
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
</UL>

<P><STRONG><a name="[110]"></a>adv_led_timeout</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, keyboard_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adv_led_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_stop
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_restart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keyboard_led.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>adv_led_timer_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, keyboard_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adv_led_timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[db]"></a>start_adv_led_timer</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, keyboard_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_adv_led_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_restart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timeout
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_callback
</UL>

<P><STRONG><a name="[dc]"></a>stop_adv_led_timer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, keyboard_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = stop_adv_led_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
</UL>

<P><STRONG><a name="[eb]"></a>reset_adv_count</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, keyboard_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = reset_adv_count
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timeout
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_callback
</UL>

<P><STRONG><a name="[b3]"></a>keyboard_led_init</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, keyboard_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keyboard_led_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[ee]"></a>capslock_led_on</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, keyboard_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = capslock_led_on
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
</UL>

<P><STRONG><a name="[ef]"></a>capslock_led_off</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, keyboard_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = capslock_led_off
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
</UL>

<P><STRONG><a name="[da]"></a>keyboard_start_adv</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, profile_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = keyboard_start_adv
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_start
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_set_param
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_privacy_set_addr_resolution
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_high_priority_bond
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longpress_timeout
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_callback
</UL>

<P><STRONG><a name="[112]"></a>keyboard_update_con_para</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, profile_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = keyboard_update_con_para
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_update_conn_param
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile_init.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>connection_param_updata_timer_init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, profile_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = connection_param_updata_timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[d5]"></a>stop_con_update_timer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, profile_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
</UL>

<P><STRONG><a name="[d6]"></a>start_con_update_timer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, profile_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
</UL>

<P><STRONG><a name="[114]"></a>privacy_modify_resolving_list</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, privacy_mgnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_privacy_set_mode
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_privacy_modify_resolv_list
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_modify_white_list
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_bdaddr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_handle_bond_modify_msg
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_add_device
</UL>

<P><STRONG><a name="[d2]"></a>privacy_add_device</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, privacy_mgnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = privacy_add_device &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_privacy_info
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_modify_resolving_list
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_authen_state_evt
</UL>

<P><STRONG><a name="[11a]"></a>privacy_handle_le_privacy_modify_resolv_list_rsp</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, privacy_mgnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = privacy_handle_le_privacy_modify_resolv_list_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_msg_callback
</UL>

<P><STRONG><a name="[11b]"></a>privacy_handle_le_privacy_resolution_status_info</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, privacy_mgnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = privacy_handle_le_privacy_resolution_status_info
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_msg_callback
</UL>

<P><STRONG><a name="[11c]"></a>privacy_msg_callback</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, privacy_mgnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = privacy_msg_callback &rArr; privacy_handle_le_privacy_modify_resolv_list_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_handle_le_privacy_resolution_status_info
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_handle_le_privacy_modify_resolv_list_rsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> privacy_mgnt.o(.text)
</UL>
<P><STRONG><a name="[de]"></a>privacy_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, privacy_mgnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = privacy_init &rArr; privacy_add_device &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_privacy_register_cb
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_high_priority_bond
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_add_device
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
</UL>

<P><STRONG><a name="[ed]"></a>privacy_handle_bond_modify_msg</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, privacy_mgnt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = privacy_handle_bond_modify_msg &rArr; privacy_modify_resolving_list
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;privacy_modify_resolving_list
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_callback
</UL>

<P><STRONG><a name="[4f]"></a>load_overlay</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, overlay_mgr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[11e]"></a>get_current_scenario_index</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, overlay_mgr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>

<P><STRONG><a name="[11f]"></a>gap_lib_handle_btif_msg</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gap_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_lib_handle_btif_msg &rArr; le_handle_vendor_cmd_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_vendor_cmd_rsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gap_lib.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>gap_lib_init</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, gap_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gap_lib_init
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_register_extend_cb
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[122]"></a>le_check_privacy_bond</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_key
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[e2]"></a>le_bond_just_work_confirm</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gap_lib_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = le_bond_just_work_confirm
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_just_work_req_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[125]"></a>le_bond_get_sec_level</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_key
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_key_entry
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_addr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[128]"></a>gap_set_lps_bootup_active_time</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[14a]"></a>lps_get_wakeup_time</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, gap_vendor_cmd.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>le_handle_vendor_cmd_rsp</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = le_handle_vendor_cmd_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[12a]"></a>le_vendor_modify_bt_le_fw_policy</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[58]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[14b]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[14c]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_rtl8762c.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[47]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[48]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4a]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[14d]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[14e]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[14f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)

<P><STRONG><a name="[150]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[54]"></a>debug_monitor_enable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, system_rtl8762c.o(.app.flash.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
</UL>

<P><STRONG><a name="[4b]"></a>ram_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_rtl8762c.o(.app.flash.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[4e]"></a>pre_main</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, system_rtl8762c.o(.app.flash.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_overlay
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ram_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_enable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[1]"></a>SystemInit</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, system_rtl8762c.o(.app.flash.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(RESET)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[53]"></a>AppUpdateVectorTable</STRONG> (Thumb, 162 bytes, Stack size 272 bytes, system_rtl8762c.o(.app.overlay_a), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[3e]"></a>hids_attr_read_cb</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, hids_kb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hids_attr_read_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hids_kb.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>hids_attr_write_cb</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, hids_kb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hids_attr_write_cb &rArr; hids_set_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hids_set_parameter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hids_kb.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>GPIO_DLPS_Exit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_DLPS_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
</UL>

<P><STRONG><a name="[10f]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, keyboard_button.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_pair_button_wakeup
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
